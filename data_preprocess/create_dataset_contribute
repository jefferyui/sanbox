from sklearn.linear_model import LinearRegression
from sklearn.metrics import r2_score
import numpy as np

# 資料生成（與前面相同）
np.random.seed(0)
n = 1000
x1 = np.random.normal(0, 1, n)
x2 = np.random.normal(0, 1, n)
a = np.sqrt(2.5)
b = np.sqrt(1.5)
eps = np.random.normal(0, 1, n)
y = a * x1 + b * x2 + eps

# 轉換為 2D
X1 = x1.reshape(-1, 1)
X2 = x2.reshape(-1, 1)
X12 = np.column_stack((x1, x2))

# 模型 1: y ~ x1
model1 = LinearRegression().fit(X1, y)
r2_x1 = r2_score(y, model1.predict(X1))

# 模型 2: y ~ x2
model2 = LinearRegression().fit(X2, y)
r2_x2 = r2_score(y, model2.predict(X2))

# 模型 3: y ~ x1 + x2
model3 = LinearRegression().fit(X12, y)
r2_x1x2 = r2_score(y, model3.predict(X12))

# 增量 R^2
delta_r2_x2_given_x1 = r2_x1x2 - r2_x1
delta_r2_x1_given_x2 = r2_x1x2 - r2_x2

print(f"R^2 (x1 only): {r2_x1:.3f}")
print(f"R^2 (x2 only): {r2_x2:.3f}")
print(f"R^2 (x1+x2):   {r2_x1x2:.3f}")
print(f"Incremental R^2 of x2 | x1: {delta_r2_x2_given_x1:.3f}")
print(f"Incremental R^2 of x1 | x2: {delta_r2_x1_given_x2:.3f}")
